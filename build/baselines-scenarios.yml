parameters:
- name: server
  type: string
  default: ''
- name: client
  type: string
  default: ''
- name: warmup
  type: number
  default: 15
- name: duration
  type: number
  default: 15
- name: connection
  type: string
  default: ''
- name: skip
  type: string
  default: ''

# Baselines
- name: baselines 
  type: object
  default: 
  
  - displayName: "2.1"
    arguments: --description Baseline21 --channel current --framework netcoreapp2.1
    supportsPlatform: false

# TODO: define latest servicing runtime version manually
#  - displayName: "2.1 Servicing"
#    arguments: --description Baseline21Servicing --aspnetCoreVersion 2.1.* --runtimeVersion 2.1.*
#    supportsPlatform: false

  - displayName: "3.1"
    arguments: --description Baseline31 --channel current --framework netcoreapp3.1
    supportsPlatform: true

  - displayName: "5.0.*"
  # Current dev, running close to other baselines, with same repeat parameters
    arguments: --description Baseline --channel edge --framework netcoreapp5.0
    supportsPlatform: true

# Scenarios
- name: scenarios 
  type: object
  default: 

  # Platform
  - displayName: Plaintext Platform
    arguments: --scenario PlaintextPlatform $(plaintextPlatformJobs)
    isPlatform: true
  - displayName: Json Platform
    arguments: --scenario JsonPlatform --connections 512 $(jsonPlatformJobs)
    isPlatform: true
  - displayName: Fortunes Platform
    arguments: --scenario FortunesPlatform $(htmlPlatformJobs) --connections 512 --database PostgreSql --env \"connectionstring=Server=tfb-database;Database=hello_world;User Id=benchmarkdbuser;Password=benchmarkdbpass;Maximum Pool Size=256;Enlist=false;Max Auto Prepare=4;Multiplexing=true;Write Coalescing Delay Us=500;Write Coalescing Buffer Threshold Bytes=1000\"
    isPlatform: true

  # Plaintext
  - displayName: Plaintext
    arguments: --scenario Plaintext $(plaintextJobs)
    isPlatform: false
  - displayName: Plaintext Non-Pipelined
    arguments: --scenario PlaintextNonPipelined $(plaintextJobs)
    isPlatform: false
  - displayName: Plaintext Mvc
    arguments: --scenario MvcPlaintext $(plaintextJobs)
    isPlatform: false
  - displayName: Plaintext Endpoint
    arguments: --scenario EndpointPlaintext $(plaintextJobs)
    isPlatform: false
  
  # JSon
  - displayName: Json
    arguments: --scenario Json $(jsonJobs)
    isPlatform: false
  - displayName: Json Mvc
    arguments: --scenario MvcJson $(jsonJobs)
    isPlatform: false
  
  # Https
  - displayName: Plaintext Https
    arguments: --scenario Plaintext -m https $(plaintextJobs)
    isPlatform: false
  - displayName: Json Https
    arguments: --scenario Json -m https $(jsonJobs)
    isPlatform: false
  - displayName: Plaintext Non-Pipelined Https
    arguments: --scenario PlaintextNonPipelined -m https $(plaintextJobs)
    isPlatform: false
  
  # Database Fortunes
  - displayName: Database Fortunes Raw
    arguments: --scenario DbFortunesRaw $(htmlJobs) --database PostgreSql
    isPlatform: false
  - displayName: Database Fortunes EF
    arguments: --scenario DbFortunesEf $(htmlJobs) --database PostgreSql
    isPlatform: false

steps:
- ${{ each s in parameters.scenarios }}:
  - ${{ each b in parameters.baselines }}:
    - ${{ if or( eq(b.supportsPlatform, true), eq(s.isPlatform, false)) }}:
      - task: PublishToAzureServiceBus@1
        condition: succeededOrFailed()
        displayName: "${{ s.displayName }} - ${{ b.displayName }}"
        enabled: ${{ ne(b.displayName, parameters.skip) }}
        inputs:
          connectedServiceName: ${{ parameters.connection }}
          waitForCompletion: true
          messageBody: |
            {
              "name": "benchmarksdriver",
              "args": [ "${{ s.arguments }} ${{ b.arguments }} --server ${{ parameters.server }} --client ${{ parameters.client }} --self-contained --warmup ${{ parameters.warmup }} --duration ${{ parameters.duration }} --session $(session) --table AspNetBaselines --sql SQL_CONNECTION_STRING" ]
            }
